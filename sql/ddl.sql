CREATE TABLE clientes (
    id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nome varchar(50) NOT NULL,
    limite int NOT NULL,
    saldo int NOT NULL
);

CREATE TABLE transacoes (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    clienteId INT,
    tipo VARCHAR(1) NOT NULL,
    valor INT NOT NULL,
    descricao varchar(50) NOT NULL,
    data_extrato DATE NOT NULL,
    FOREIGN KEY (clienteId) REFERENCES clientes(id)
);

CREATE OR REPLACE FUNCTION inserir_transacao() 
RETURNS TRIGGER LANGUAGE PLPGSQL AS $$
BEGIN

    NEW.data_extrato = NOW();
    RETURN NEW;

END;
$$;

CREATE TRIGGER inserir_transacao_trigger
BEFORE INSERT ON transacoes
FOR EACH ROW
EXECUTE PROCEDURE inserir_transacao();

-- TODO: handle non "c" (credit) or "debit" scenarios
-- TODO: handle scenario where new balance can't be below limit ("extra credits" for Brazil banking system)

CREATE OR REPLACE FUNCTION atualizar_saldo_cliente()
RETURNS TRIGGER LANGUAGE PLPGSQL AS $$
BEGIN
    IF NEW.tipo = 'c' THEN
        UPDATE clientes
        SET saldo = saldo + NEW.valor
        WHERE id = NEW.clienteId;
    ELSE
        UPDATE clientes
        SET saldo = saldo - NEW.valor
        WHERE id = NEW.clienteId;
    END IF;

    RETURN NEW;
END;
$$;

CREATE TRIGGER atualizar_saldo_cliente_trigger
AFTER INSERT ON transacoes
FOR EACH ROW
EXECUTE PROCEDURE atualizar_saldo_cliente();